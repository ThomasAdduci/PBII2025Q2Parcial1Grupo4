package ar.edu.unlam.dominioTest;

import static org.junit.Assert.assertTrue;

import org.junit.Before;
import org.junit.Test;
import ar.edu.unlam.dominio.*;

public class TurnosMedicosTest {

	private GestionDeTurnos osde;
	private Medico medico1;
	
	// ATRIBUTOS PACIENTES
	private Paciente paciente1;
	private Paciente paciente2;
	
	
	// ATRIBUTOS RESERVA
	private Reserva reserva1;
	
	
	
	@Before
	public void inicializacion() {
		osde = new GestionDeTurnos();
		
		String nombreMedico1 = "Pablo";
		String apellidoMedico1 = "Martinez";
		Integer edadMedico1 = 60;
		Integer dniMedico1 = 17555892;
		medico1 = new Medico(nombreMedico1,apellidoMedico1, edadMedico1,dniMedico1);
			
		String nombrePaciente1 = "Pedro";
		String apellidoPaciente1 = "Lanzani";
		Integer edadPaciente1 = 33;
		Integer dniPaciente1 = 36888999;;
		
		paciente1 = new Paciente(nombrePaciente1,apellidoPaciente1,edadPaciente1,dniPaciente1);
		
		String nombrePaciente2 = "Camila";
		String apellidoPaciente2 = "Dominguez";
		Integer edadPaciente2 = 37;
		Integer dniPaciente2 = 36888999;;
		
		paciente1 = new Paciente(nombrePaciente1,apellidoPaciente1,edadPaciente1,dniPaciente1);
	}
	
	
	@Test
	public void DadoQueExisteUnGestorDeTurnosSeQuiereAgregarUnNuevoPacienteYSeObtieneUnResultadoExitoso() {
		
		Boolean seAgrego = osde.agregarPacienteAlSistema(paciente1);
		assertTrue(seAgrego);
	}
	
	@Test
	public void DadoQueExisteUnGestorDeTurnosSeQuiereAgregar2PacientesConElMismoDniYSeObtieneUnResultadoFalso() {
		
		Boolean seAgrego = osde.agregarPacienteAlSistema(paciente1);
		assertTrue(seAgrego);
	}
	
	

	@Test
	public void dadoQueExisteUnClienteYQuiereReservarUnTurnoMedicoSeObtieneUnResultadoExitoso() {
	}
	
	public void dadoQueExisteUnClienteQuiereReservarUnTurnoFueraDelHorarioEstablecidoYObtieneResultadoFalso() {
		
	}
	
	public void dadoQueExisteUnClienteYQuiereReservarDosTurnosElMismoDiaYHoraYObtieneResultadoFalso() {
		
	}
	
	public void dadoQueExisteNoExisteUnClienteRegistradoEnElSistemaYQuiereReservarUnTurnoYObtieneResultadoFalso() {
		
	}
	
	public void dadoQueExisteUnClienteConUnTurnoSolicitadoYLoQuiereCancelarSeObtieneUnResultadoExitoso() {
		
	}
	
	
	
	
	
	
	
}
